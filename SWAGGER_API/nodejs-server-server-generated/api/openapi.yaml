openapi: 3.0.0
info:
  title: TVET College Web App API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/AbdisalamHassanMoamed/tvet_college/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://app.swaggerhub.com/apis/AbdisalamHassanMoamed/tvet_college/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Users
  description: APIs for managing users
- name: Locations
  description: APIs for managing locations
- name: Shops
  description: APIs for managing shops
- name: Products
  description: APIs for managing products
- name: Transactions
  description: APIs for managing transactions
paths:
  /users:
    get:
      tags:
      - Users
      summary: Retrieve a list of users
      operationId: usersGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "401":
          description: Unauthorized
      x-swagger-router-controller: Users
    post:
      tags:
      - Users
      summary: Create a new user
      operationId: usersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      x-swagger-router-controller: Users
  /users/{user_id}:
    get:
      tags:
      - Users
      summary: Retrieve a specific user
      operationId: usersUser_idGET
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Not Found
      x-swagger-router-controller: Users
    put:
      tags:
      - Users
      summary: Update a specific user
      operationId: usersUser_idPUT
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Users
    delete:
      tags:
      - Users
      summary: Delete a specific user
      operationId: usersUser_idDELETE
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Users
  /locations:
    get:
      tags:
      - Locations
      summary: Retrieve a list of locations
      operationId: locationsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
                x-content-type: application/json
        "401":
          description: Unauthorized
      x-swagger-router-controller: Locations
    post:
      tags:
      - Locations
      summary: Create a new location
      operationId: locationsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      x-swagger-router-controller: Locations
  /locations/{location_id}:
    get:
      tags:
      - Locations
      summary: Retrieve a specific location
      operationId: locationsLocation_idGET
      parameters:
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        "404":
          description: Not Found
      x-swagger-router-controller: Locations
    put:
      tags:
      - Locations
      summary: Update a specific location
      operationId: locationsLocation_idPUT
      parameters:
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Locations
    delete:
      tags:
      - Locations
      summary: Delete a specific location
      operationId: locationsLocation_idDELETE
      parameters:
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Locations
  /shops:
    get:
      tags:
      - Shops
      summary: Retrieve a list of shops
      operationId: shopsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
                x-content-type: application/json
        "401":
          description: Unauthorized
      x-swagger-router-controller: Shops
    post:
      tags:
      - Shops
      summary: Create a new shop
      operationId: shopsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      x-swagger-router-controller: Shops
  /shops/{shop_id}:
    get:
      tags:
      - Shops
      summary: Retrieve a specific shop
      operationId: shopsShop_idGET
      parameters:
      - name: shop_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        "404":
          description: Not Found
      x-swagger-router-controller: Shops
    put:
      tags:
      - Shops
      summary: Update a specific shop
      operationId: shopsShop_idPUT
      parameters:
      - name: shop_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Shops
    delete:
      tags:
      - Shops
      summary: Delete a specific shop
      operationId: shopsShop_idDELETE
      parameters:
      - name: shop_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Shops
  /products:
    get:
      tags:
      - Products
      summary: Retrieve a list of products
      operationId: productsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
                x-content-type: application/json
        "401":
          description: Unauthorized
      x-swagger-router-controller: Products
    post:
      tags:
      - Products
      summary: Create a new product
      operationId: productsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      x-swagger-router-controller: Products
  /products/{product_id}:
    get:
      tags:
      - Products
      summary: Retrieve a specific product
      operationId: productsProduct_idGET
      parameters:
      - name: product_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Not Found
      x-swagger-router-controller: Products
    put:
      tags:
      - Products
      summary: Update a specific product
      operationId: productsProduct_idPUT
      parameters:
      - name: product_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Products
    delete:
      tags:
      - Products
      summary: Delete a specific product
      operationId: productsProduct_idDELETE
      parameters:
      - name: product_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearerAuth: []
      x-swagger-router-controller: Products
  /transactions:
    get:
      tags:
      - Transactions
      summary: Retrieve a list of transactions
      operationId: transactionsGET
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
                x-content-type: application/json
        "401":
          description: Unauthorized
      x-swagger-router-controller: Transactions
    post:
      tags:
      - Transactions
      summary: Create a new transaction
      operationId: transactionsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - bearerAuth: []
      x-swagger-router-controller: Transactions
  /transactions/{transaction_id}:
    get:
      tags:
      - Transactions
      summary: Retrieve a specific transaction
      operationId: transactionsTransaction_idGET
      parameters:
      - name: transaction_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        "404":
          description: Not Found
      x-swagger-router-controller: Transactions
components:
  schemas:
    User:
      required:
      - email
      - name
      - password_hash
      - role
      type: object
      properties:
        user_id:
          type: integer
          readOnly: true
        name:
          type: string
        email:
          type: string
        password_hash:
          type: string
        role:
          type: string
      example:
        role: role
        user_id: 0
        password_hash: password_hash
        name: name
        email: email
    Location:
      required:
      - address
      - name
      type: object
      properties:
        location_id:
          type: integer
          readOnly: true
        name:
          type: string
        address:
          type: string
      example:
        address: address
        name: name
        location_id: 0
    Shop:
      required:
      - location_id
      - name
      type: object
      properties:
        shop_id:
          type: integer
          readOnly: true
        location_id:
          type: integer
        name:
          type: string
      example:
        shop_id: 0
        name: name
        location_id: 6
    Product:
      required:
      - category
      - name
      - price
      - shop_id
      - shop_type
      - stock
      type: object
      properties:
        product_id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
        shop_type:
          type: string
        shop_id:
          type: integer
        stock:
          type: integer
      example:
        shop_id: 1
        price: 6.0274563
        product_id: 0
        name: name
        shop_type: shop_type
        description: description
        category: category
        stock: 5
    Transaction:
      required:
      - product_id
      - quantity
      - user_id
      type: object
      properties:
        transaction_id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        transaction_time:
          type: string
          format: date-time
      example:
        transaction_id: 0
        quantity: 5
        user_id: 6
        product_id: 1
        transaction_time: 2000-01-23T04:56:07.000+00:00
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
